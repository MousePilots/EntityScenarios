## Velocity Template.
package ${td.getPackageName()};

import javax.annotation.Generated;
import javax.persistence.metamodel.StaticMetamodel;
import javax.persistence.metamodel.Type;
import org.mousepilots.es.core.model.EmbeddableTypeES;
import org.mousepilots.es.core.model.impl.EmbeddableTypeESImpl;
##Attribute imports
#if (${td.getDeclaredSingularAttributes().size()} > 0)
import org.mousepilots.es.core.model.SingularAttributeES;
#end
#if (${td.getDeclaredCollectionAttributes().size()} > 0)
import org.mousepilots.es.core.model.CollectionAttributeES;
#end
#if (${td.getDeclaredListAttributes().size()} > 0)
import org.mousepilots.es.core.model.ListAttributeES;
#end
#if (${td.getDeclaredMapAttributes().size()} > 0)
import org.mousepilots.es.core.model.MapAttributeES;
#end
#if (${td.getDeclaredSetAttributes().size()} > 0)
import org.mousepilots.es.core.model.SetAttributeES;
#end

/**
 * Models class {@link ${td.javaTypeSimpleName}} with persistence type: ${td.getPersistenceType().name()}
 */
@Generated(value="${esNameAndVersion}", date="${currentDate}")
@StaticMetamodel(${td.javaTypeSimpleName}.class)
public class ${td.javaTypeSimpleName}_ES #if(${extendsClass})extends ${extendsClass.javaTypeCanonicalName}_ES#end{

#foreach($ad in ${td.getDeclaredAttributes()}) ##Add attributes.
    public static volatile ${ad.getClass().getSimpleName().replace("Descriptor","ES")}<${td.getJavaTypeCanonicalName()}, #if(${ad.getClass().getCanonicalName().contains("Map")})${ad.getKeyJavaType().getCanonicalName()},#end ${ad.getJavaTypeCanonicalName()}> ${ad.name};
#end

    private static final EmbeddableTypeES<${td.javaTypeSimpleName}> INSTANCE_ES = new EmbeddableTypeESImpl<>(
        "${td.name}",
        ${td.ordinal},
        ${td.javaType.name}.class,
        Type.PersistenceType.EMBEDDABLE,
        "${td.javaTypeSimpleName}",
        ${td.instantiable},
        ${td.getMetaModelClass().getCanonicalName()}.class,
        ${attributes},
        ${superType},
        ${subTypes}
        );

    public static EmbeddableTypeES getInstance() {
        return INSTANCE_ES;
    }
}