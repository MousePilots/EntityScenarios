## Velocity Template.
package ${package};

import javax.annotation.Generated;
import javax.persistence.metamodel.StaticMetamodel;
import javax.persistence.metamodel.Type;
import org.mousepilots.es.core.model.EntityTypeES;
##Attribute imports
#if (${td.getDeclaredSingularAttributes().size()} > 0)
import org.mousepilots.es.core.model.SingularAttributeES;
#end
#if (${td.getDeclaredCollectionAttributes().size()} > 0)
import org.mousepilots.es.core.model.CollectionAttributeES;
#end
#if (${td.getDeclaredListAttributes().size()} > 0)
import org.mousepilots.es.core.model.ListAttributeES;
#end
#if (${td.getDeclaredMapAttributes().size()} > 0)
import org.mousepilots.es.core.model.MapAttributeES;
#end
#if (${td.getDeclaredSetAttributes().size()} > 0)
import org.mousepilots.es.core.model.SetAttributeES;
#end

/**
 * Models class {@link ${td.javaTypeSimpleName}} with persistence type: ${td.getPersistenceType().name()}
 */
@Generated(value="${esNameAndVersion}", date="${currentDate}")
@StaticMetamodel(${td.javaTypeSimpleName}.class)
public class ${td.javaTypeSimpleName}_ES #if(${extendsClass})extends ${extendsClass.javaTypeSimpleName}_ES#end{

#foreach($ad in ${td.getDeclaredSingularAttributes()}) ##Add Singular attributes.
    public static volatile SingularAttributeES<${td.name}, ${ad.getJavaTypeSimpleName()}> ${ad.name};
#end
#foreach($ad in ${td.getDeclaredCollectionAttributes()}) ##Add Collection attributes.
    public static volatile CollectionAttributeES<${td.name}, ${ad.getJavaTypeSimpleName()}> ${ad.name};
#end
#foreach($ad in ${td.getDeclaredListAttributes()}) ##Add List attributes.
    public static volatile ListAttributeES<${td.name}, ${ad.getJavaTypeSimpleName()}> ${ad.name};
#end
#foreach($ad in ${td.getDeclaredMapAttributes()}) ##Add Map attributes.
    public static volatile MapAttributeES<${td.name}, ${ad.getKeyJavaType().getSimpleName()}, ${ad.getJavaTypeSimpleName()}> ${ad.name};
#end
#foreach($ad in ${td.getDeclaredSetAttributes()}) ##Add Set attributes.
    public static volatile SetAttributeES<${td.name}, ${ad.getJavaTypeSimpleName()}> ${ad.name};
#end
    #*private static final MappedSuperclassTypeES<${td.javaTypeSimpleName}> INSTANCE_ES = new MappedSuperclassTypeESImpl<>(
        ${td.getId()},
        null,
        ${td.getVersion()},
        null,
        ${td.getIdClassAttribute()},
        ${td.hasSingleIdAttribute()},
        ${td.hasVersionAttribute()},
        ${td.getIdType()},
        "${td.name}",
        ${td.ordinal},
        ${td.javaType},
        Type.PersistenceType.MAPPED_SUPERCLASS,
        "${td.javaTypeSimpleName}",
        ${td.instantiable},
        ${td.getMetaModelClass()},
        ${td.getAttributes()},        
        ${td.getSuper()},
        null);

    public static MappedSuperclassTypeES<${td.javaTypeSimpleName}> getInstance() {
        return INSTANCE_ES;
    }*#
}