## Velocity Template.
package ${td.getPackageName()};

##Attribute imports
#if (${td.getDeclaredSingularAttributes().size()} > 0)
import org.mousepilots.es.core.model.SingularAttributeES;
#end
#if (${td.getDeclaredCollectionAttributes().size()} > 0)
import org.mousepilots.es.core.model.CollectionAttributeES;
#end
#if (${td.getDeclaredListAttributes().size()} > 0)
import org.mousepilots.es.core.model.ListAttributeES;
#end
#if (${td.getDeclaredMapAttributes().size()} > 0)
import org.mousepilots.es.core.model.MapAttributeES;
#end
#if (${td.getDeclaredSetAttributes().size()} > 0)
import org.mousepilots.es.core.model.SetAttributeES;
#end

/**
 * Models class {@link ${td.javaTypeSimpleName}} with persistence type: ${td.getPersistenceType().name()}
 */
@javax.annotation.Generated(value = "${esNameAndVersion}", date = "${currentDate}")
@javax.persistence.metamodel.StaticMetamodel(${td.javaTypeSimpleName}.class)
public class ${td.javaTypeSimpleName}_ES #if(${extendsClass})extends ${extendsClass.javaTypeCanonicalName}_ES#end{

#foreach($ad in ${td.getDeclaredAttributes()}) ##Add attributes.
    public static volatile ${ad.getClass().getSimpleName().replace("Descriptor","ES")}<${td.getJavaTypeCanonicalName()}, #if(${ad.getClass().getCanonicalName().contains("Map")})${ad.getKeyJavaType().getCanonicalName()},#end ${ad.getJavaTypeCanonicalName()}> ${ad.name};
#end

    private static final org.mousepilots.es.core.model.EntityTypeES<${td.javaTypeSimpleName}> INSTANCE_ES = new org.mousepilots.es.core.model.impl.EntityTypeESImpl<>(
        javax.persistence.metamodel.Bindable.BindableType.ENTITY_TYPE,
        ${td.getJavaTypeCanonicalName()}.class,
        ${td.getId().getOrdinal()},
        #if(${td.getDeclaredId()})${td.getDeclaredId().getOrdinal()},
#else -1,
#end
        ${td.getVersion().getOrdinal()},
        #if (${td.getDeclaredVersion()})${td.getDeclaredVersion().getOrdinal()},
#else -1,
#end
        ${idClassAttributes},
        ${td.hasSingleIdAttribute()},
        ${td.hasVersionAttribute()},
        ${td.getIdType().getOrdinal()},
        "${td.name}",
        ${td.ordinal},
        ${td.javaType.name}.class,
        javax.persistence.metamodel.Type.PersistenceType.ENTITY,
        "${td.javaTypeSimpleName}",
        ${td.instantiable},
        ${td.getMetaModelClass().getCanonicalName()}.class,
        ${attributes},
        ${superType},
        ${subTypes}
        );

    public static org.mousepilots.es.core.model.EntityTypeES getInstance() {
        return INSTANCE_ES;
    }

    static {
#foreach($ad in ${td.getDeclaredAttributes()}) ##Initialise attributes.
#if(${ad.name.equals("id")})
    ${ad.name} = (${ad.getClass().getSimpleName().replace("Descriptor", "ES")}<${td.getJavaTypeCanonicalName()}, #if(${ad.getClass.getCanonicalName().contains("Map")})${ad.getKeyJavaType().getCanonicalName()}, #end${ad.getJavaTypeCanonicalName()}>) INSTANCE_ES.${ad.getGetterMethodName()}(${ad.getJavaTypeCanonicalName()}.class);
#elseif (${ad.name.equals("version")})
    ${ad.name} = (${ad.getClass().getSimpleName().replace("Descriptor", "ES")}<${td.getJavaTypeCanonicalName()}, #if(${ad.getClass.getCanonicalName().contains("Map")})${ad.getKeyJavaType().getCanonicalName()}, #end${ad.getJavaTypeCanonicalName()}>) INSTANCE_ES.${ad.getGetterMethodName()}(${ad.getJavaTypeCanonicalName()}.class);
#else
    ${ad.name} = (${ad.getClass().getSimpleName().replace("Descriptor", "ES")}<${td.getJavaTypeCanonicalName()}, #if(${ad.getClass().getCanonicalName().contains("Map")})${ad.getKeyJavaType().getCanonicalName()}, #end${ad.getJavaTypeCanonicalName()}>) org.mousepilots.es.core.model.impl.AbstractMetaModelES.getInstance().getAttribute(${ad.getOrdinal()});
#end
#end
    }
}